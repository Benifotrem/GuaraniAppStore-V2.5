version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: guarani_mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      - MONGO_INITDB_DATABASE=guarani_appstore
    networks:
      - guarani_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/guarani_appstore --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: guarani_backend
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
      - backend_logs:/var/log
    env_file:
      - ./backend/.env
    environment:
      - MONGO_URL=mongodb://mongodb:27017/guarani_appstore
      - USE_MONGODB=true
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - guarani_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
    container_name: guarani_frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - guarani_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Opcional pero recomendado)
  nginx:
    image: nginx:alpine
    container_name: guarani_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - guarani_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  guarani_network:
    driver: bridge
