# GuaraniAppStore V2.5 Pro - Nginx Configuration for Cloudflare Production
# Optimizado para trabajar con Cloudflare como proxy inverso

# Upstream para backend FastAPI
upstream backend_app {
    server 127.0.0.1:8001;
    keepalive 32;
}

# Upstream para frontend React
upstream frontend_app {
    server 127.0.0.1:3000;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

# Server block - HTTPS (port 443)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name guaraniappstore.com www.guaraniappstore.com;

    # SSL Configuration con Cloudflare Origin Certificate
    ssl_certificate /etc/ssl/certs/cloudflare_origin.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare_origin.key;
    
    # SSL Settings optimizados
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers (Cloudflare ya agrega algunos, pero reforzamos)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Cloudflare Real IP Configuration
    # IMPORTANTE: Cloudflare pasa la IP real en CF-Connecting-IP
    # Estas directivas hacen que nginx use la IP real en logs y para rate limiting
    
    # Rangos de IP de Cloudflare (actualizar periódicamente desde https://www.cloudflare.com/ips/)
    # IPv4
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    
    # IPv6
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    
    # Header que contiene la IP real (Cloudflare usa CF-Connecting-IP)
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;

    # Logging con IP real
    access_log /var/log/nginx/guaraniappstore_access.log combined;
    error_log /var/log/nginx/guaraniappstore_error.log warn;

    # Client body size (importante para uploads de facturas/documentos)
    client_max_body_size 100M;
    client_body_timeout 60s;

    # Timeouts (Cloudflare Free/Pro tiene límite de 100s)
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 90s;  # Máximo 90s para estar bajo el límite de Cloudflare
    send_timeout 60s;

    # ============================================
    # BACKEND API ROUTES (FastAPI)
    # ============================================
    
    location /api/ {
        # Rate limiting para API (excepto webhooks)
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        
        # Headers necesarios
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cloudflare headers (pasar al backend)
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;
        proxy_set_header CF-IPCountry $http_cf_ipcountry;
        
        # WebSocket support (si lo necesitas en el futuro)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Rate limiting estricto para login
    location /api/auth/login {
        limit_req zone=login_limit burst=2 nodelay;
        
        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
    }

    # Webhooks de Telegram (sin rate limiting, Cloudflare ya filtra)
    location /api/telegram/webhook/ {
        # Sin rate limiting aquí - Cloudflare firewall ya filtra IPs de Telegram
        
        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers especiales de Telegram
        proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
        
        # Timeouts más largos para webhooks
        proxy_read_timeout 60s;
    }

    # ============================================
    # FRONTEND ROUTES (React)
    # ============================================
    
    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket para React Hot Reload (desarrollo)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Static assets con cache agresivo
    location /static/ {
        proxy_pass http://frontend_app;
        
        # Cache en Cloudflare + browser
        add_header Cache-Control "public, max-age=31536000, immutable";
        
        # Compression
        gzip on;
        gzip_types text/css application/javascript image/svg+xml;
        gzip_vary on;
    }

    # Favicon
    location /favicon.png {
        proxy_pass http://frontend_app;
        add_header Cache-Control "public, max-age=86400";
    }

    # Health check (sin logs)
    location /api/health {
        proxy_pass http://backend_app;
        access_log off;
    }

    # Block acceso a archivos sensibles
    location ~ /\. {
        deny all;
    }

    location ~ \.(git|env|md)$ {
        deny all;
    }
}

# Server block - HTTP (port 80) - Redirect a HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name guaraniappstore.com www.guaraniappstore.com;

    # Redirect todo a HTTPS
    return 301 https://$server_name$request_uri;
}

# Server block - API Subdomain (opcional)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.guaraniappstore.com;

    # SSL (mismo certificado Origin)
    ssl_certificate /etc/ssl/certs/cloudflare_origin.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare_origin.key;
    
    # SSL Settings (mismos que arriba)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # Cloudflare Real IP (mismo que arriba)
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    # ... (copiar todos los rangos de arriba)
    real_ip_header CF-Connecting-IP;

    # Solo servir backend
    location / {
        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
    }
}
